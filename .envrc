# https://github.com/nix-community/nix-direnv#direnv-source_url
if ! has nix_direnv_version || ! nix_direnv_version 2.3.0; then
  source_url "https://raw.githubusercontent.com/nix-community/nix-direnv/2.3.0/direnvrc" "sha256-Dmd+j63L84wuzgyjITIfSxSD57Tx7v51DMxVZOsiUD8="
fi

use_flake() {
  _nix_direnv_preflight

  flake_expr="${1:-.}"
  flake_dir="${flake_expr%#*}"

  if [[ "$flake_expr" = -* ]]; then
    if [[ -n "$2" ]]; then
      log_status "nix-direnv: the first argument must be a flake expression"
    else
      log_status "nix-direnv: the first argument must be a flake expression. did you mean 'use flake . $1'?"
    fi
  fi

  local files_to_watch
  files_to_watch=(".envrc" "$HOME/.direnvrc" "$HOME/.config/direnv/direnvrc")

  if [[ -d "$flake_dir" ]]; then
    files_to_watch+=("$flake_dir/flake.nix" "$flake_dir/flake.lock" "$flake_dir/devshell.toml")
  fi

  nix_direnv_watch_file "${files_to_watch[@]}"

  local layout_dir profile
  layout_dir=$(direnv_layout_dir)
  profile="${layout_dir}/flake-profile$(_nix_argsum_suffix "$flake_expr")"
  local profile_rc="${profile}.rc"
  local flake_inputs="${layout_dir}/flake-inputs/"

  local need_update=0
  local file=
  for file in "${nix_watches[@]}"; do
    if [[ "$file" -nt "$profile_rc" ]]; then
      need_update=1
      break
    fi
  done


  if [[ ! -e "$profile"
     || ! -e "$profile_rc"
     || "$need_update" == "1"
     ]];
  then
    if [[ "$_nix_direnv_manual_reload" == "1" && -z "$_nix_direnv_force_reload" ]]; then
      if [[ -e "$profile_rc" ]]; then
        log_status "nix-direnv: cache is out of date. use \"nix-direnv-reload\" to reload"
      else
        log_status "nix-direnv: cache does not exist. use \"nix-direnv-reload\" to create it"
      fi

    else
      _nix_clean_old_gcroots "$layout_dir"

      # We need to update our cache
      local tmp_profile="${layout_dir}/flake-profile.$$"
      local tmp_profile_rc
      tmp_profile_rc=$("${NIX_BIN_PREFIX}nix" print-dev-env \
        --extra-experimental-features "nix-command flakes" \
        --profile "$tmp_profile" "$@")

      local drv
      drv=$(_nix_direnv_realpath "$tmp_profile")

      echo "$tmp_profile_rc" > "$profile_rc"
      rm -f "$tmp_profile" "$tmp_profile"*
      _nix_add_gcroot "$drv" "$profile"

      # also add garbage collection root for source
      local flake_input_paths
      mkdir -p "$flake_inputs"
      flake_input_paths=$("${NIX_BIN_PREFIX}nix" flake archive \
        --json \
        --extra-experimental-features "nix-command flakes" \
        --no-write-lock-file \
	"$flake_dir" | grep -E -o '[^"]+/nix/store/[^"]+')
      for path in $flake_input_paths; do
        _nix_add_gcroot "$path" "${flake_inputs}/${path##*/}"
      done

      log_status "nix-direnv: renewed cache"
    fi
  else
    # Our cache is valid, use that"
    log_status "nix-direnv: using cached dev shell"

  fi

  _nix_import_env "$profile_rc"
}
use flake .# --impure --option sandbox false
