From c6dc094def9650c281f89f09296acc877af4009b Mon Sep 17 00:00:00 2001
From: David Guibert <david.guibert@gmail.com>
Date: Wed, 2 Mar 2022 14:15:05 +0100
Subject: [PATCH 1/2] mpi: set ICCCFG/IFORTCFG/ICPCCFG to /dev/null to avoid
 breaking -v

Solves NorESMhub/BLOM/issues#145
---
 mesonbuild/dependencies/mpi.py | 4 ++++
 1 file changed, 4 insertions(+)

diff --git a/mesonbuild/dependencies/mpi.py b/mesonbuild/dependencies/mpi.py
index 2354767c2b7..b2a44088286 100644
--- a/mesonbuild/dependencies/mpi.py
+++ b/mesonbuild/dependencies/mpi.py
@@ -157,6 +157,10 @@ class IntelMPIConfigToolDependency(_MPIConfigToolDependency):
     """Wrapper around Intel's mpiicc and friends."""
 
     version_arg = '-v'  # --version is not the same as -v
+    # ifort.cfg with: -Xlinker -rpath=... breaks -v (as ifort -v return 1 as exitcode)
+    os.environ["ICCCFG"] = "/dev/null"
+    os.environ["ICPCCFG"] = "/dev/null"
+    os.environ["IFORTCFG"] = "/dev/null"
 
     def __init__(self, name: str, env: 'Environment', kwargs: T.Dict[str, T.Any],
                  language: T.Optional[str] = None):

From 83cd020268f03242e6c39150f7d3cddcfd163981 Mon Sep 17 00:00:00 2001
From: David Guibert <david.guibert@gmail.com>
Date: Wed, 2 Mar 2022 14:15:50 +0100
Subject: [PATCH 2/2] intel-mpi: avoid infinite loop

Intel MPI uses I_MPI_CC, I_MPI_CXX and I_MPI_F90 to define the
underlaying compilers called by the wrappers.

Closes mesonbuild/meson#9637
---
 mesonbuild/dependencies/mpi.py | 6 +++---
 1 file changed, 3 insertions(+), 3 deletions(-)

diff --git a/mesonbuild/dependencies/mpi.py b/mesonbuild/dependencies/mpi.py
index b2a44088286..85382b506c6 100644
--- a/mesonbuild/dependencies/mpi.py
+++ b/mesonbuild/dependencies/mpi.py
@@ -65,11 +65,11 @@ def mpi_factory(env: 'Environment',
                 nwargs['returncode_value'] = 3
 
             if language == 'c':
-                tool_names = [os.environ.get('I_MPI_CC'), 'mpiicc']
+                tool_names = [os.environ.get('MPICC'), 'mpiicc']
             elif language == 'cpp':
-                tool_names = [os.environ.get('I_MPI_CXX'), 'mpiicpc']
+                tool_names = [os.environ.get('MPICXX'), 'mpiicpc']
             elif language == 'fortran':
-                tool_names = [os.environ.get('I_MPI_F90'), 'mpiifort']
+                tool_names = [os.environ.get('MPIF90'), 'mpiifort']
 
             cls = IntelMPIConfigToolDependency  # type: T.Type[ConfigToolDependency]
         else: # OpenMPI, which doesn't work with intel
